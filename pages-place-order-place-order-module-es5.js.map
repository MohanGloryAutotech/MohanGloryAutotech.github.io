{"version":3,"sources":["webpack:///src/app/pages/place-order/place-order-routing.module.ts","webpack:///src/app/pages/place-order/order-status/order-status.component.ts","webpack:///src/app/pages/place-order/order-status/order-status.component.html","webpack:///src/app/pages/place-order/make-order/make-order.component.ts","webpack:///src/app/pages/place-order/make-order/make-order.component.html","webpack:///src/app/@theme/components/confirmation-dialog/confirmation-dialog.component.ts","webpack:///src/app/@theme/components/confirmation-dialog/confirmation-dialog.component.html","webpack:///src/app/pages/place-order/place-order.component.ts","webpack:///src/app/pages/place-order/place-order.component.html","webpack:///src/app/pages/place-order/place-order.module.ts","webpack:///src/app/@theme/model/order.ts"],"names":["routes","path","component","PlaceOrderRoutingModule","forChild","imports","exports","OrderStatusComponent","orderService","commonService","modalService","toastr","ordeList","isAdmin","confirmDialogMsg","setTitle","getUser","name","getAllOrderList","getOrderListByPartyId","getAllOrders","subscribe","data","error","partyId","userId","id","status","modalRef","open","size","componentInstance","result","then","updateStatus","success","selector","templateUrl","styleUrls","MakeOrderComponent","route","_route","capacityList","qualityList","typeList","packageSizeList","placeOrder","formSubmitted","quantity","currentOrder","Number","snapshot","paramMap","get","getAllCapacityList","getAllQuality","getAllPackageSize","getAllTypes","getOrderById","getAllCapacity","getAllType","getById","myForm","valid","updateOrder","navigate","isCart","orderStatus","addToCart","resetForm","reset","incrQty","decrQty","placeNewOrder","ConfirmationDialogComponent","activeModal","close","accept","decline","PlaceOrderComponent","productService","productList","checkIsAdmin","getAllProductList","userName","PlaceOrderModule","declarations","PlaceOrder","amount"],"mappings":"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","file":"pages-place-order-place-order-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { MakeOrderComponent } from \"./make-order/make-order.component\";\r\nimport { OrderStatusComponent } from \"./order-status/order-status.component\";\r\n\r\nimport { PlaceOrderComponent } from \"./place-order.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: PlaceOrderComponent,\r\n  },\r\n  {\r\n    path: \"order\",\r\n    component: PlaceOrderComponent,\r\n  },\r\n  {\r\n    path: \"edit/:id\",\r\n    component: MakeOrderComponent,\r\n  },\r\n  {\r\n    path: \"add\",\r\n    component: MakeOrderComponent,\r\n  },\r\n  {\r\n    path: \"status\",\r\n    component: OrderStatusComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PlaceOrderRoutingModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { ConfirmationDialogComponent } from \"app/@theme/components/confirmation-dialog/confirmation-dialog.component\";\r\nimport { PlaceOrder } from \"app/@theme/model/order\";\r\nimport { CommonService } from \"app/@theme/services/common.service\";\r\nimport { OrderService } from \"app/@theme/services/order.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"ngx-order-status\",\r\n  templateUrl: \"./order-status.component.html\",\r\n  styleUrls: [\"./order-status.component.scss\"],\r\n})\r\nexport class OrderStatusComponent implements OnInit {\r\n\r\n  ordeList: PlaceOrder[] = [];\r\n  isAdmin: boolean = false;\r\n  confirmDialogMsg:string = '';\r\n\r\n  constructor(\r\n    private orderService: OrderService,\r\n    private commonService: CommonService,\r\n    private modalService: NgbModal,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.commonService.setTitle('Orders');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.commonService.getUser().name == \"ADMIN\") {\r\n      this.isAdmin = true;\r\n      this.getAllOrderList();\r\n    } else {\r\n      this.isAdmin = false;\r\n      this.getOrderListByPartyId();\r\n    }\r\n  }\r\n\r\n  getAllOrderList() {\r\n    this.orderService.getAllOrders().subscribe(\r\n      (data) => {\r\n        if (data[\"success\"]) this.ordeList = data[\"data\"];\r\n      },\r\n      (error) => {}\r\n    );\r\n  }\r\n\r\n  getOrderListByPartyId() {\r\n    let partyId = this.commonService.getUser().userId;\r\n    this.orderService.getOrderListByPartyId(partyId).subscribe(\r\n      (data) => {\r\n        if (data[\"success\"]) this.ordeList = data[\"data\"];\r\n      },\r\n      (error) => {}\r\n    );\r\n  }\r\n\r\n  updateStatus(id, status) {\r\n    if(status != 'Canceled')\r\n      this.confirmDialogMsg = 'update status?';\r\n    else\r\n    this.confirmDialogMsg = 'cancel order?';\r\n    const modalRef = this.modalService.open(ConfirmationDialogComponent, {\r\n      size: \"sm\",\r\n    });\r\n    modalRef.componentInstance.confirmDialogMsg = this.confirmDialogMsg\r\n    modalRef.result.then((result) => {\r\n      if (result) {\r\n        this.orderService.updateStatus(id, status).subscribe((data) => {\r\n          if (data[\"success\"]) this.toastr.success(\"Marked as \" + status);\r\n          if (this.isAdmin) this.getAllOrderList();\r\n          else this.getOrderListByPartyId();\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<nb-card class=\"nb-style product-list-nb-card-mr0\">\r\n    <!-- <nb-card-header class=\"nb-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-9 col-7\">\r\n                <h2 class=\"nb-text\">My Orders</h2>\r\n            </div>\r\n        </div>\r\n    </nb-card-header> -->\r\n    <nb-card-body  class=\"mobile-bg-color pd-0 \" *ngIf=\"isAdmin\">\r\n\r\n   \r\n        <ngx-datatable [rows]=\"ordeList\" [ngClass]=\"'bootstrap'\" [headerHeight]=\"31\" class=\"material\"\r\n            [footerHeight]=\"40\">\r\n            <ngx-datatable-column name=\"Action\" sortable=\"false\" *ngIf=\"isAdmin\">\r\n                <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 col-5\">\r\n                            <div *ngIf=\"row.orderStatus == 'Packed'\r\n                            || row.orderStatus == 'Processing' || row.orderStatus == 'Confirmed'\">\r\n                                <button type=\"button\" class=\"btn btn-primary btn-sm btn-design-change btn-design btn-product\"\r\n                                    (click)=\"updateStatus(row.id,'Canceled')\">Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6 col-7 pd-0 text-left\">\r\n                            <div *ngIf=\"row.orderStatus == 'Confirmed'\">\r\n                                <button type=\"button\" class=\"btn btn-primary btn-sm btn-design-change btn-design btn-product\"\r\n                                    (click)=\"updateStatus(row.id,'Processing')\">Process</button>\r\n                            </div>\r\n                            <div *ngIf=\"row.orderStatus == 'Processing'\">\r\n                                <button type=\"button\" class=\"btn btn-primary btn-sm btn-design-change btn-design btn-product\"\r\n                                    (click)=\"updateStatus(row.id,'Packed')\">Pack</button>\r\n                            </div>\r\n                            <div *ngIf=\"row.orderStatus == 'Packed'\">\r\n                                <button type=\"button\" class=\"btn btn-primary btn-sm btn-design-change btn-design btn-product\"\r\n                                    (click)=\"updateStatus(row.id,'Shipped')\">Ship</button>\r\n                            </div>\r\n                            <div *ngIf=\"row.orderStatus == 'Shipped'\">\r\n                                <button type=\"button\" class=\"btn btn-primary btn-sm btn-design-change btn-design btn-product\"\r\n                                    (click)=\"updateStatus(row.id,'Delivered')\">Delivered</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Order status\" prop=\"orderStatus\">\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Capacity\" prop=\"productCapacity\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Package Size\" prop=\"productPackageSize\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Quality\" prop=\"productQuality\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Type\" prop=\"productType\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Quantity\" prop=\"quantity\"></ngx-datatable-column>\r\n\r\n\r\n        </ngx-datatable>\r\n        \r\n    </nb-card-body>\r\n    <nb-card-body class=\"mobile-bg-color pd-0 \"  *ngIf=\"!isAdmin\">\r\n\r\n        <div *ngIf=\"ordeList?.length != 0\">\r\n            <nb-card *ngFor=\"let item of ordeList; let i = index\">\r\n                <nb-card-body class=\"product-list-pd\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 pd-0\" *ngIf=\"item.orderStatus == 'Confirmed'\">\r\n                            <div class=\"tracking-badge text-right color-o\">\r\n                                <span>Confirmed</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 pd-0\"  *ngIf=\"item.orderStatus == 'Processing'\">\r\n                            <div class=\"tracking-badge text-right color-o\">\r\n                                <span>Processing</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 pd-0\"  *ngIf=\"item.orderStatus == 'Packed'\">\r\n                            <div class=\"tracking-badge text-right color-o\">\r\n                                <span>Packed</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 pd-0\"  *ngIf=\"item.orderStatus == 'Shipped'\">\r\n                            <div class=\"tracking-badge text-right color-o\">\r\n                                <span>Shipped</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 pd-0\"  *ngIf=\"item.orderStatus == 'Delivered'\">\r\n                            <div class=\"tracking-badge text-right color-g\">\r\n                                <span>Delivered</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 pd-0\"  *ngIf=\"item.orderStatus == 'Canceled'\">\r\n                            <div class=\"tracking-badge text-right color-g\">\r\n                                <span  style=\"background: red;\">Canceled</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-md-5 col-4 pd-0\">\r\n                            <div class=\"cart-img\">\r\n                                <img src=\"../../../assets/img/chair-new.jpg\" class=\"img-fluid\" alt=\"\">\r\n                            </div>\r\n                            <!-- <div class=\"placeorder-btn\">\r\n                                <button type=\"button\" class=\"btn btn-primary btn-placeorder\">Order Status</button>\r\n                            </div> -->\r\n                        </div>\r\n                        <div class=\"col-md-7 col-8 pd-0 dis-productlist-flex\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <div class=\"main-desc-detail\">\r\n                                        <div class=\"detail-data\">\r\n                                            <span class=\"detail-data-listing main-cart-name\">{{item.productType}}</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                                <div class=\"col-12\">\r\n                                    <div class=\"main-desc-detail\"><span>Quality:</span>\r\n                                        <div class=\"detail-data\">\r\n                                            <span class=\"detail-data-listing\">{{item.productQuality}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-12\">\r\n                                    <div class=\"main-desc-detail\"><span>Capacity:</span>\r\n                                        <div class=\"detail-data\">\r\n                                            <span class=\"detail-data-listing\">{{item.productCapacity}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-12\">\r\n                                    <div class=\"main-desc-detail\"><span>PackageSize:</span>\r\n                                        <div class=\"detail-data\">\r\n                                            <span class=\"detail-data-listing\">{{item.productPackageSize}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            \r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </nb-card-body>\r\n                \r\n            </nb-card>\r\n        </div>\r\n    </nb-card-body>\r\n</nb-card>","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { CommonService } from \"app/@theme/services/common.service\";\r\nimport { OrderService } from \"app/@theme/services/order.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { PlaceOrder } from \"../../../@theme/model/order\";\r\n\r\n@Component({\r\n  selector: \"ngx-make-order\",\r\n  templateUrl: \"./make-order.component.html\",\r\n  styleUrls: [\"./make-order.component.scss\"],\r\n})\r\nexport class MakeOrderComponent implements OnInit {\r\n  capacityList: any = [];\r\n  qualityList: any = [];\r\n  typeList: any = [];\r\n  packageSizeList: any = [];\r\n  placeOrder: PlaceOrder = new PlaceOrder();\r\n  formSubmitted: boolean = false;\r\n  currentOrder:Number;\r\n  constructor(\r\n    private orderService: OrderService,\r\n    private toastr: ToastrService,\r\n    private route: Router,\r\n    private commonService:CommonService,\r\n    private _route: ActivatedRoute\r\n  ) {\r\n    this.commonService.setTitle('Place Order');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.placeOrder.quantity=1;\r\n    this.currentOrder = Number(this._route.snapshot.paramMap.get('id'));\r\n    this.getAllCapacityList();\r\n    this.getAllQuality();\r\n    this.getAllPackageSize();\r\n    this.getAllTypes();\r\n    if(this.currentOrder)\r\n    this.getOrderById();\r\n  }\r\n\r\n  getAllCapacityList() {\r\n    this.orderService.getAllCapacity().subscribe(\r\n      (data) => {\r\n        this.capacityList = data[\"data\"];\r\n      },\r\n      (error) => {}\r\n    );\r\n  }\r\n\r\n  getAllQuality() {\r\n    this.orderService.getAllQuality().subscribe(\r\n      (data) => {\r\n        this.qualityList = data[\"data\"];\r\n      },\r\n      (error) => {}\r\n    );\r\n  }\r\n\r\n  getAllPackageSize() {\r\n    this.orderService.getAllPackageSize().subscribe(\r\n      (data) => {\r\n        this.packageSizeList = data[\"data\"];\r\n      },\r\n      (error) => {}\r\n    );\r\n  }\r\n\r\n  getAllTypes() {\r\n    this.orderService.getAllType().subscribe(\r\n      (data) => {\r\n        this.typeList = data[\"data\"];\r\n      },\r\n      (error) => {}\r\n    );\r\n  }\r\n\r\n  getOrderById(){\r\n    this.orderService.getById(this.currentOrder).subscribe(\r\n      data=>{\r\n        if(data['success']){\r\n          this.placeOrder = data['data'];\r\n        }\r\n       // else\r\n        //this.toastr.error(\"No data found\")\r\n      }\r\n    )\r\n  }\r\n\r\n  updateOrder(myForm){\r\n    this.formSubmitted = true;\r\n    if(myForm.valid){\r\n      this.orderService.updateOrder(this.placeOrder).subscribe(\r\n        (data) => {\r\n          if(data['success']){\r\n            //this.toastr.success(\"Updated successfully\");\r\n            this.route.navigate(['pages/cart']);\r\n          }\r\n          //else\r\n          //this.toastr.success(data['msg']);\r\n        },\r\n        (error) => {\r\n          //this.toastr.error('Error placing order')\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  incrQty(){\r\n    this.placeOrder.quantity++;\r\n  }\r\n\r\n  decrQty(){\r\n    if(this.placeOrder.quantity != 1)\r\n    this.placeOrder.quantity--;\r\n  }\r\n\r\n  addToCart(myForm){\r\n    this.formSubmitted = true;\r\n    if(myForm.valid){\r\n      this.placeOrder.partyId = Number(this.commonService.getUser().userId);\r\n      this.placeOrder.id = 0;\r\n      this.placeOrder.isCart = true;\r\n      this.placeOrder.orderStatus = '';\r\n      this.orderService.addToCart(this.placeOrder).subscribe(\r\n        (data) => {\r\n          if(data['success']){\r\n            this.route.navigate(['pages/cart']);\r\n            //this.resetForm(myForm);\r\n          }\r\n          //else\r\n          //this.toastr.success(data['msg']);\r\n        },\r\n        (error) => {\r\n          //this.toastr.error('Error placing order')\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  placeNewOrder(myForm) {\r\n    this.formSubmitted = true;\r\n    if (myForm.valid) {\r\n      this.placeOrder.partyId = Number(this.commonService.getUser().userId);\r\n      this.orderService.placeOrder(this.placeOrder).subscribe(\r\n        (data) => {\r\n          if(data['success']){\r\n            //this.toastr.success(\"Order placed successfully\");\r\n            this.resetForm(myForm);\r\n          }\r\n          //else\r\n          //this.toastr.success(data['msg']);\r\n        },\r\n        (error) => {\r\n          //this.toastr.error('Error placing order')\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  resetForm(myForm){\r\n    this.formSubmitted = false;\r\n    myForm.reset();\r\n    this.placeOrder = new PlaceOrder();\r\n    this.placeOrder.quantity = 1;\r\n  }\r\n}\r\n","<nb-card class=\"nb-style\">\r\n  <!-- <nb-card-header class=\"nb-header\">\r\n    <div>\r\n      <h2 class=\"nb-text\">Place order</h2>\r\n    </div>\r\n  </nb-card-header> -->\r\n  <nb-card-body class=\"mobile-bg-color\">\r\n    <div>\r\n      <form #myForm=\"ngForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-2 col-12\">\r\n            <div class=\"img-product\">\r\n              <img src=\"../../../../assets/img/chair.jpg\" class=\"img-fluid\" alt=\"\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"form-group\">\r\n              <label class=\"design-mobile-label\">Catpacity</label>\r\n              <ng-select name=\"capacityId\" [(ngModel)]='placeOrder.productCapacity' required #capacity1=\"ngModel\"\r\n                [ngClass]=\"{'is-invalid': formSubmitted && capacity1.invalid}\" placeholder=\"Select Capacity\"\r\n                class=\"required-error-dropdown\">\r\n                <ng-option *ngFor=\"let capacity of capacityList\" [value]=\"capacity.capacity\">{{capacity.capacity}}\r\n                </ng-option>\r\n              </ng-select>\r\n              <div class=\"text-danger error-txt\" style=\"font-size: small;\"\r\n                *ngIf=\"(capacity1.invalid)&&(formSubmitted || capacity1.touched)\">\r\n                <span>Capacity is required.</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-4\">\r\n            <div class=\"form-group\">\r\n              <label class=\"design-mobile-label\">Quality</label>\r\n              <ng-select name=\"qualityId\" [(ngModel)]='placeOrder.productQuality' required #quality1=\"ngModel\"\r\n                [ngClass]=\"{'is-invalid': formSubmitted && quality1.invalid}\" placeholder=\"Select Quality\"\r\n                class=\"required-error-dropdown\">\r\n                <ng-option *ngFor=\"let q of qualityList\" [value]=\"q.quality\">{{q.quality}}</ng-option>\r\n              </ng-select>\r\n              <div class=\"text-danger error-txt\" style=\"font-size: small;\"\r\n                *ngIf=\"(quality1.invalid)&&(formSubmitted || quality1.touched)\">\r\n                <span>Quality is required.</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n\r\n          <div class=\"col-md-4\">\r\n            <div class=\"form-group\">\r\n              <label class=\"design-mobile-label\">Type</label>\r\n              <ng-select name=\"typeId\" [(ngModel)]='placeOrder.productType' required #type1=\"ngModel\"\r\n                [ngClass]=\"{'is-invalid': formSubmitted && type1.invalid}\" placeholder=\"Select Type\"\r\n                class=\"required-error-dropdown\">\r\n                <ng-option *ngFor=\"let type of typeList\" [value]=\"type.type\">{{type.type}}</ng-option>\r\n              </ng-select>\r\n              <div class=\"text-danger error-txt\" style=\"font-size: small;\"\r\n                *ngIf=\"(type1.invalid)&&(formSubmitted || type1.touched)\">\r\n                <span>Type is required.</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-4\">\r\n            <div class=\"form-group\">\r\n              <label class=\"design-mobile-label\">PackageSize</label>\r\n              <ng-select name=\"packageSizeId\" [(ngModel)]='placeOrder.productPackageSize' required\r\n                #packageSize1=\"ngModel\" [ngClass]=\"{'is-invalid': formSubmitted && packageSize1.invalid}\"\r\n                placeholder=\"Select PackageSize\" class=\"required-error-dropdown\">\r\n                <ng-option *ngFor=\"let p of packageSizeList\" [value]=\"p.packageSize\">{{p.packageSize}}</ng-option>\r\n              </ng-select>\r\n              <div class=\"text-danger error-txt\" style=\"font-size: small;\"\r\n                *ngIf=\"(packageSize1.invalid)&&(formSubmitted || packageSize1.touched)\">\r\n                <span>Package-size is required.</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n\r\n          <div class=\"col-md-4\">\r\n            <div class=\"form-group\">\r\n\r\n              <span class=\"dis-inli qty-label\">Quantity</span>\r\n\r\n              <div class=\"quantity-control\" data-quantity=\"\">\r\n                <button class=\"quantity-btn dis-fl\" (click)=\"incrQty()\" data-quantity-minus=\"\">\r\n                  <nb-icon icon=\"plus-outline\" class=\"main-icon\"></nb-icon>\r\n                </button>\r\n                <input type=\"number\" class=\"quantity-input\" (click)=\"placeOrder.quantity-1\" data-quantity-target=\"\"\r\n                  value=\"1\" #quantity=\"ngModel\" step=\"1\" min=\"1\" max=\"\" name=\"quantity\"\r\n                  [(ngModel)]='placeOrder.quantity'\r\n                  [ngClass]=\"{'is-invalid':(quantity.invalid)&&(formSubmitted || quantity.touched)}\">\r\n                <button class=\"quantity-btn dis-fl\" data-quantity-plus=\"\">\r\n                  <nb-icon icon=\"minus-outline\" (click)=\"decrQty()\" class=\"main-icon\"></nb-icon>\r\n                </button>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-12 text-left\">\r\n            \r\n            <button class=\"btn btn-primary btn-sm btn-design btn-product btn-product-cancel\" type=\"button\" (click)=\"resetForm(myForm)\">\r\n               CANCEL\r\n            </button>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"fix-add-cart\">\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-1 col-6\">\r\n\r\n\r\n                <button type=\"button\" class=\"btn btn-primary btn-sm btn-design btn-product display-center-content\"\r\n                  (click)=\"currentOrder? updateOrder(myForm): addToCart(myForm)\">\r\n                  <nb-icon icon=\"shopping-cart-outline\" class=\"main-icon\"></nb-icon> ADD TO CART\r\n                </button>\r\n\r\n              </div>\r\n              <div class=\"col-md-1 col-6\">\r\n                <button type=\"button\" class=\"btn btn-primary btn-sm btn-design btn-product btn-wd-100 display-center-content buy-now-btn\"\r\n                  (click)=\"placeNewOrder(myForm)\">\r\n                  <nb-icon icon=\"shopping-bag-outline\" class=\"main-icon\"></nb-icon> BUY NOW\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  </nb-card-body>\r\n</nb-card>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n  \r\n\r\n@Component({\r\n  selector: 'ngx-confirmation-dialog',\r\n  templateUrl: './confirmation-dialog.component.html',\r\n  styleUrls: ['./confirmation-dialog.component.scss']\r\n})\r\nexport class ConfirmationDialogComponent implements OnInit {\r\n\r\n  constructor(private activeModal: NgbActiveModal) { }\r\n\r\n  @Input() confirmDialogMsg: string;\r\n\r\n  ngOnInit(): void {} \r\n  public decline() {\r\n    this.activeModal.close(false);\r\n  }\r\n\r\n  public accept() {\r\n    this.activeModal.close(true);\r\n  }   \r\n}  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n  \r\n\r\n","<div class=\"modal-header nb-header\">\r\n  <h4 class=\"modal-title nb-text\">Please Confirm</h4>\r\n</div>\r\n<div class=\"modal-body\">\r\n  Do you really want to {{confirmDialogMsg}}\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm btn-design\" (click)=\"accept()\">Ok</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm btn-design\" (click)=\"decline()\">Cancel</button>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CommonService } from 'app/@theme/services/common.service';\r\nimport { ProductService } from 'app/@theme/services/product.service';\r\n\r\n@Component({\r\n  selector: 'ngx-place-order',\r\n  templateUrl: './place-order.component.html',\r\n  styleUrls: ['./place-order.component.scss']\r\n})\r\nexport class PlaceOrderComponent implements OnInit {\r\n\r\n  productList :any = [];\r\n  isAdmin:boolean = false;\r\n  constructor(private productService:ProductService, private route:Router, private commonService: CommonService) {\r\n    this.commonService.setTitle('Product List');\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.checkIsAdmin();\r\n    this.getAllProductList();\r\n  }\r\n\r\n  goToPlaceOrder(){\r\n    this.route.navigate(['pages/order/add']);\r\n  }\r\n\r\n  goToAdd(){\r\n    this.route.navigate(['pages/product/add']);\r\n  }\r\n\r\n  checkIsAdmin(){\r\n    if(this.commonService.getUser().name == 'ADMIN')\r\n      this.isAdmin = true;\r\n    else\r\n      this.isAdmin = false;\r\n  }\r\n\r\n  getAllProductList(){\r\n    this.productService.getAllProductList().subscribe(\r\n      data=>{\r\n        if(data['success']){\r\n          this.productList = data['data'];\r\n        }\r\n      },error=>{\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  clickAddProduct(){\r\n    this.route.navigate(['pages/product/add'])\r\n  }\r\n\r\n  order(id){\r\n    let userName = this.commonService.getUser().name;\r\n    if(userName != \"ADMIN\")\r\n      this.route.navigate(['pages/order/add'])\r\n  }\r\n\r\n  addPrices(id){\r\n    this.route.navigate(['pages/product/addPrice',id]);\r\n  }\r\n\r\n  goToEdit(id){\r\n    this.route.navigate(['pages/product/edit',id]);\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<nb-card class=\"nb-style product-list-nb-card-mr0\">\r\n    <nb-card-body class=\"mobile-bg-color pd-0\">\r\n        <div *ngIf=\"isAdmin\">\r\n            <ngx-datatable [rows]=\"productList\" [ngClass]=\"'bootstrap'\" [headerHeight]=\"31\" class=\"material\"\r\n                [footerHeight]=\"40\">\r\n                <ngx-datatable-column name=\"Action\" sortable=\"false\" *ngIf=\"isAdmin\">\r\n                    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n                        <nb-icon ngbTooltip=\"Tooltip on bottom\" status=\"primary\" [options]=\"{animation:{type:'zoom'}}\"\r\n                            (click)=\"goToEdit(row.id)\" icon=\"edit\"></nb-icon>&nbsp;&nbsp;\r\n                        <button nbTooltip=\"Add price\" class=\"btn primary-status nb-supplier-icon\"\r\n                            (click)=\"addPrices(row.id)\" placement=\"auto\" nbTooltipStatus=\"success\"\r\n                            nbTooltipPlacement=\"bottom\" nbButton>\r\n                            <nb-icon status=\"primary\" [options]=\"{animation:{type:'zoom'}}\" icon=\"menu\"\r\n                                style=\"color: burlywood;\"></nb-icon>\r\n                        </button>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Type\" prop=\"productType\"></ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Quality\" prop=\"productQuality\"></ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Capacity\" prop=\"productCapacity\"></ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Package-size\" prop=\"productPackageSize\"></ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Quantity\" prop=\"quantity\">\r\n                    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n                        <div *ngIf=\"row.quantity < 0\" style=\"color: red;\"\r\n                            nbTooltip=\"You are out of stock, please take note\">\r\n                            {{row.quantity}}\r\n                        </div>\r\n                        <div *ngIf=\"row.quantity >= 0\">\r\n                            {{row.quantity}}\r\n                        </div>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n            </ngx-datatable>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 mobile-btn-center text-btn-right\">\r\n                    <div class=\"padding-bt-tp\">\r\n                        <button type=\"button\" class=\"btn btn-primary btn-sm btn-design btn-product\"\r\n                            (click)=\"goToAdd()\">ADD NEW PRODUCT</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n            <div *ngIf=\"!isAdmin\">\r\n                <div *ngIf=\"productList?.length != 0\">\r\n                    <nb-card *ngFor=\"let item of productList; let i = index\">\r\n                        <nb-card-body class=\"product-list-pd pt-0\">\r\n                            <div class=\"row\">\r\n\r\n                                <div class=\"col-md-5 col-4 pd-0\">\r\n                                    <div class=\"cart-img\">\r\n                                        <img src=\"../../../assets/img/chair-new.jpg\" class=\"img-fluid\" alt=\"\">\r\n                                    </div>\r\n                                    <div class=\"placeorder-btn text-center\">\r\n                                        <button type=\"button\" (click)=\"goToPlaceOrder()\"\r\n                                            class=\"btn btn-primary btn-placeorder\">Place Order</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-7 col-8 pd-0 dis-productlist-flex\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <div class=\"main-desc-detail\">\r\n                                                <div class=\"detail-data\">\r\n                                                    <span\r\n                                                        class=\"detail-data-listing main-cart-name\">{{item.productType}}</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                        <div class=\"col-12\">\r\n                                            <div class=\"main-desc-detail\"><span>Quality:</span>\r\n                                                <div class=\"detail-data\">\r\n                                                    <span class=\"detail-data-listing\">{{item.productQuality}}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12\">\r\n                                            <div class=\"main-desc-detail\"><span>Capacity:</span>\r\n                                                <div class=\"detail-data\">\r\n                                                    <span class=\"detail-data-listing\">{{item.productCapacity}}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12\">\r\n                                            <div class=\"main-desc-detail\"><span>PackageSize:</span>\r\n                                                <div class=\"detail-data\">\r\n                                                    <span class=\"detail-data-listing\">{{item.productPackageSize}}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </nb-card-body>\r\n\r\n                    </nb-card>\r\n                </div>\r\n            </div>\r\n    </nb-card-body>\r\n</nb-card>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PlaceOrderRoutingModule } from './place-order-routing.module';\r\nimport { PlaceOrderComponent } from './place-order.component';\r\nimport { MakeOrderComponent } from './make-order/make-order.component';\r\nimport { SharedModule } from 'app/@theme/shared.module';\r\nimport { OrderStatusComponent } from './order-status/order-status.component';\r\nimport { ConfirmationDialogComponent } from 'app/@theme/components/confirmation-dialog/confirmation-dialog.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [PlaceOrderComponent, ConfirmationDialogComponent, MakeOrderComponent, OrderStatusComponent],\r\n  imports: [\r\n    CommonModule,\r\n    PlaceOrderRoutingModule,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class PlaceOrderModule { }\r\n","export class PlaceOrder {\r\n    id:Number;\r\n    amount: number = 100;\r\n    isCart:boolean = true;\r\n    orderPlacedDate: Date;\r\n    orderStatus: string = \"Confirmed\";\r\n    partyId: number = 5;\r\n    productCapacity: number;\r\n    productPackageSize: number;\r\n    productQuality: string;\r\n    productType: string;\r\n    quantity: number;\r\n}"]}