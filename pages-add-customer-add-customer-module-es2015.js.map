{"version":3,"sources":["./src/app/pages/add-customer/add-customer.component.ts","./src/app/pages/add-customer/add-customer.component.html","./src/app/@theme/model/Party.ts","./src/app/pages/add-customer/add-new-customer/add-new-customer.component.ts","./src/app/pages/add-customer/add-new-customer/add-new-customer.component.html","./src/app/pages/add-customer/add-customer.module.ts","./src/app/@theme/services/category/category.service.ts","./src/app/pages/add-customer/add-customer-routing.module.ts"],"names":[],"mappings":"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","file":"pages-add-customer-add-customer-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Party } from 'app/@theme/model/Party';\r\nimport { CommonService } from 'app/@theme/services/common.service';\r\nimport { PartyService } from 'app/@theme/services/party.service';\r\n\r\n@Component({\r\n  selector: 'ngx-add-customer',\r\n  templateUrl: './add-customer.component.html',\r\n  styleUrls: ['./add-customer.component.scss']\r\n})\r\nexport class AddCustomerComponent implements OnInit {\r\n\r\n  partyList:Party[] = [];\r\n  constructor(\r\n    private partyService: PartyService,\r\n    private commonService:CommonService\r\n  ) {\r\n    this.commonService.setTitle('Party')\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllParties();\r\n  }\r\n\r\n  getAllParties(){\r\n    this.partyService.getAllPartyList().subscribe(\r\n      data=>{\r\n        if(data['success'])\r\n        this.partyList = data['data']\r\n        else\r\n        this.partyList = [];\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<nb-card class=\"nb-style\">\r\n    <!-- <nb-card-header class=\"nb-header\">\r\n        <div class=\"row\">\r\n            \r\n            <div class=\"col-md-9 col-7\">\r\n                <h2 class=\"nb-text\">Party</h2>\r\n            </div>\r\n        </div>  \r\n    </nb-card-header> -->\r\n    <nb-card-body>\r\n\r\n        <!--  ngx- DataTable  -->\r\n        <ngx-datatable [rows]=\"partyList\" [ngClass]=\"'bootstrap'\" [headerHeight]=\"31\" class=\"material\"\r\n            [footerHeight]=\"40\">\r\n            <ngx-datatable-column name=\"Action\" sortable=\"false\" class=\"first-width\">\r\n                <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n                    <nb-icon icon=\"edit\" status=\"primary\" [options]=\"{ animation: { type: 'zoom' } }\"\r\n                        [routerLink]=\"['/pages/party/edit',row.id]\"></nb-icon>\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Party Name\" prop=\"partyName\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Party Code\" prop=\"partyCode\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Category\" prop=\"categoryId\"></ngx-datatable-column>\r\n\r\n        </ngx-datatable>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 col-12 mobile-btn-center text-btn-right\">\r\n                <button class=\"btn btn-primary btn-sm btn-design btn-product\" routerLink=\"add\">ADD PARTY</button>\r\n            </div>\r\n        </div>\r\n    </nb-card-body>\r\n</nb-card>","export class Party {\r\n    id:Number;\r\n    categoryId: number;\r\n    partyCode: string;\r\n    partyName: string;\r\n    password: string;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Party } from 'app/@theme/model/Party';\r\nimport { CategoryService } from 'app/@theme/services/category/category.service';\r\nimport { CommonService } from 'app/@theme/services/common.service';\r\nimport { PartyService } from 'app/@theme/services/party.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Md5 } from 'ts-md5/dist/md5';\r\n@Component({\r\n  selector: 'ngx-add-new-customer',\r\n  templateUrl: './add-new-customer.component.html',\r\n  styleUrls: ['./add-new-customer.component.scss']\r\n})\r\nexport class AddNewCustomerComponent implements OnInit {\r\n\r\n  public party:Party = new Party();\r\n  public categoryList: any[]= [];\r\n  public formSubmitted:boolean =false;\r\n  public partyValid:boolean = false;\r\n  public currentParty:any;\r\n\r\n  constructor(\r\n    private partyService: PartyService,\r\n    private toastr: ToastrService,\r\n    private route: Router,\r\n    private categoryService: CategoryService,\r\n    private _route: ActivatedRoute,\r\n    private commonService:CommonService\r\n  ) { \r\n    this.commonService.setTitle('Add Party');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCategory();\r\n    this.currentParty = this._route.snapshot.paramMap.get('id');\r\n    if(this.currentParty)\r\n      this.getPartyById();\r\n  }\r\n\r\n  getAllCategory(){\r\n    this.categoryService.getAllCategory().subscribe(\r\n      data=>{\r\n        if(data['success'])\r\n          this.categoryList = data['data'];\r\n      }\r\n    )\r\n  }\r\n\r\n  getPartyById(){\r\n    this.partyService.getPartyById(this.currentParty).subscribe(\r\n      data=>{\r\n        if(data['success'])\r\n          this.party = data['data'];\r\n          this.party.password = null;\r\n      }\r\n    )\r\n  }\r\n\r\n  validatePartyCode(){\r\n    this.partyService.validatePartyCode(this.party.partyCode).subscribe(\r\n      data=>{\r\n        if(data['success'])\r\n          this.partyValid = data['data'];\r\n      }\r\n    )\r\n  }\r\n\r\n  cancelForm(){\r\n    this.route.navigate(['pages/party']);\r\n  }\r\n\r\n  addParty(myForm){\r\n    this.formSubmitted = true;\r\n    if(myForm.valid){\r\n      let md5 = new Md5();\r\n      this.party.password = String(md5.appendStr(this.party.password).end())\r\n      this.partyService.addNewParty(this.party).subscribe(\r\n        data=>{\r\n          if(data['success']){\r\n            this.toastr.success('Party added successfully');\r\n            this.route.navigate(['pages/party']);\r\n          }\r\n        },error=>{\r\n          this.toastr.error('Error adding party');\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  updateParty(myForm){\r\n    this.formSubmitted = true;\r\n    if(myForm.valid){\r\n      let md5 = new Md5();\r\n      this.party.password = String(md5.appendStr(this.party.password).end())\r\n      this.partyService.updateParty(this.party).subscribe(\r\n        data=>{\r\n          if(data['success']){\r\n            this.toastr.success('Party updated successfully');\r\n            this.route.navigate(['pages/party']);\r\n          }\r\n        },error=>{\r\n          this.toastr.error('Error updating party');\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n}\r\n","<nb-card class=\"nb-style\">\r\n    <nb-card-body>\r\n        <div>\r\n            <form #myForm=\"ngForm\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-2\"></div>\r\n                    <div class=\"col-md-4 col-12\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"required\">Party Name</label>\r\n                            <input type=\"text\" name=\"partyName\" class=\"form-control\" #partyName1=\"ngModel\"\r\n                                [(ngModel)]='party.partyName' required\r\n                                [ngClass]=\"{'is-invalid':(partyName1.invalid)&&(formSubmitted || partyName1.touched)}\"\r\n                                placeholder=\"Party name\">\r\n                            <div class=\"invalid-feedback\"\r\n                                *ngIf=\"(partyName1.invalid)&&(formSubmitted || partyName1.touched)\">\r\n                                <span>Party name is required.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4 col-12\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"required\">Party Code</label>\r\n                            <input type=\"text\" name=\"quality\" class=\"form-control\" #partyCode1=\"ngModel\"\r\n                                [(ngModel)]='party.partyCode' required\r\n                                [ngClass]=\"{'is-invalid':(partyCode1.invalid)&&(formSubmitted || partyCode1.touched)}\"\r\n                                placeholder=\"Party code\" (change)=\"validatePartyCode()\">\r\n                            <div class=\"invalid-feedback\"\r\n                                *ngIf=\"(partyCode1.invalid)&&(formSubmitted || partyCode1.touched)\">\r\n                                <span>Party code is required.</span>\r\n                            </div>\r\n                            <div class=\"text-danger\" style=\"font-size: small;\" *ngIf=\"partyValid\">\r\n                                <span>Party Code is already Exist </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-2\"></div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-2\"></div>\r\n                    <div class=\"col-md-4 col-12\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"required\">Category</label>\r\n                            <ng-select name=\"categoryId\" [(ngModel)]='party.categoryId' required #categoryId1=\"ngModel\"\r\n                                [ngClass]=\"{'is-invalid': formSubmitted && categoryId1.invalid}\"\r\n                                placeholder=\"Select Category\" class=\"required-error-dropdown\">\r\n                                <ng-option *ngFor=\"let c of categoryList\" [value]=\"c.id\">{{c.category}}</ng-option>\r\n                            </ng-select>\r\n                            <div class=\"text-danger\" style=\"font-size: small;\"\r\n                                *ngIf=\"(categoryId1.invalid)&&(formSubmitted || categoryId1.touched)\">\r\n                                <span>Category is required.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4 col-12\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"required\">Password</label>\r\n                            <input type=\"password\" name=\"password\" class=\"form-control\" #password1=\"ngModel\"\r\n                                [(ngModel)]='party.password' required\r\n                                [ngClass]=\"{'is-invalid':(password1.invalid)&&(formSubmitted || password1.touched)}\"\r\n                                placeholder=\"Password\">\r\n                            <div class=\"invalid-feedback\"\r\n                                *ngIf=\"(password1.invalid)&&(formSubmitted || password1.touched)\">\r\n                                <span>Password is required.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-2\"></div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6 col-6 text-right\">\r\n                        <div class=\"padding-bt-tp\">\r\n                            <button class=\"btn btn-primary btn-sm btn-design btn-product\" type=\"button\"\r\n                                (click)=\"cancelForm()\">CANCEL</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-6 text-left\">\r\n                        <div class=\"padding-bt-tp\">\r\n                            <button type=\"button\" class=\"btn btn-primary btn-sm btn-design btn-product\" style=\"margin-right:20px\"\r\n                                (click)=\"!currentParty?addParty(myForm):updateParty(myForm);\">SAVE</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </nb-card-body>\r\n</nb-card>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AddCustomerRoutingModule } from './add-customer-routing.module';\r\nimport { AddCustomerComponent } from './add-customer.component';\r\nimport { AddNewCustomerComponent } from './add-new-customer/add-new-customer.component';\r\nimport { SharedModule } from 'app/@theme/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddCustomerComponent, AddNewCustomerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AddCustomerRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class AddCustomerModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { CommonService } from '../common.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n  constructor(private httpClient:HttpClient,private commonService:CommonService) { \r\n  }\r\n\r\n  getAllCategory(){\r\n    return this.httpClient.get(this.commonService.envUrl()+'allCategory');\r\n  }\r\n  \r\n}\r\n","import { compileComponentFromMetadata } from \"@angular/compiler\";\r\nimport { Component, NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AddNewProductComponent } from \"../add-product/add-new-product/add-new-product.component\";\r\n\r\nimport { AddCustomerComponent } from \"./add-customer.component\";\r\nimport { AddNewCustomerComponent } from \"./add-new-customer/add-new-customer.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: AddCustomerComponent,\r\n  },\r\n  {\r\n    path: \"add\",\r\n    component: AddNewCustomerComponent,\r\n  },\r\n  {\r\n    path: \"edit/:id\",\r\n    component: AddNewCustomerComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddCustomerRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}