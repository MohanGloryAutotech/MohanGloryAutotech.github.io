{"version":3,"sources":["webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/@theme/model/login-class.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html"],"names":["routes","path","component","children","NgxAuthRoutingModule","forChild","imports","exports","AuthComponent","selector","templateUrl","styleUrls","LoginModal","password","partyCode","AuthModule","forRoot","declarations","LoginComponent","route","toast","authService","jwtToken","storeTokenService","errorData","formSubmitted","userPermission","loginReq","myForm","valid","md5","appendStr","end","checkUserLogin","subscribe","data","set","partyName","id","navigate","error","onSubmit","changeDetection","OnPush"],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NbAuthComponent } from '@nebular/auth';\r\nimport { AuthComponent } from './auth.component';\r\nimport { NotFoundComponent } from 'app/pages/miscellaneous/not-found/not-found.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n    children: [{\r\n      path: '',\r\n      component: LoginComponent,\r\n    },]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NgxAuthRoutingModule {\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<nb-layout>\r\n  <nb-layout-column>\r\n    <nb-card>\r\n      <nb-card-body>\r\n        <nb-auth-block>\r\n          <router-outlet></router-outlet>\r\n        </nb-auth-block>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </nb-layout-column>\r\n</nb-layout>","export class LoginModal {\r\n    partyCode: any;\r\n    password: any;\r\n    constructor() {\r\n        this.password = '';\r\n        this.partyCode = '';\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { NgxAuthRoutingModule } from './auth-routing.module';\r\nimport { NbAuthModule, NbPasswordAuthStrategy } from '@nebular/auth';\r\nimport {\r\n  NbAlertModule,\r\n  NbButtonModule,\r\n  NbCardModule,\r\n  NbCheckboxModule,\r\n  NbInputModule,\r\n  NbLayoutModule,\r\n  NbToastrModule,\r\n} from '@nebular/theme';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ThemeModule } from '../@theme/theme.module';\r\nimport { AuthComponent } from './auth.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    NbAlertModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbCheckboxModule,\r\n    NgxAuthRoutingModule,\r\n    NbAuthModule,\r\n    NbCardModule,\r\n    NbLayoutModule,\r\n    ThemeModule,\r\n    NbToastrModule.forRoot(),\r\n  ],\r\n  declarations: [\r\n    LoginComponent,\r\n    AuthComponent,\r\n  ],\r\n})\r\nexport class AuthModule {\r\n}","import {\r\n  ChangeDetectionStrategy,\r\n\r\n  Component\r\n} from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport * as errorData from \"app/@theme/json/error.json\";\r\nimport { AuthService } from \"app/@theme/services/auth.service\";\r\nimport { JwtTokenService } from \"app/@theme/services/jwt-token.service\";\r\nimport { StoreTokenService } from \"app/@theme/services/store-token.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Md5 } from 'ts-md5/dist/md5';\r\nimport { LoginModal } from \"../../@theme/model/login-class\";\r\n@Component({\r\n  selector: \"nb-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LoginComponent {\r\n  public errorData: any = (errorData as any).default;\r\n  formSubmitted = false;\r\n  userPermission = [];\r\n  loginReq: LoginModal;\r\n  constructor(\r\n    private route: Router,\r\n    private toast: ToastrService,\r\n    private authService: AuthService,\r\n    private jwtToken: JwtTokenService,\r\n    private storeTokenService: StoreTokenService\r\n  ) {\r\n    this.loginReq = new LoginModal();\r\n    // let location = window.location;\r\n    // if (location[\"hostname\"] == \"150.107.188.188\")\r\n    //   window[\"myValue\"] = \"http://150.107.188.188:8080/\";\r\n    // else window[\"myValue\"] = \"http://13.235.71.124:8080/\";\r\n  }\r\n\r\n  // On submit button click\r\n  onSubmit(myForm) {\r\n    this.formSubmitted = true;\r\n    if (myForm.valid) {\r\n      let md5 = new Md5();\r\n      this.loginReq.password = md5.appendStr(this.loginReq.password).end()\r\n      this.authService.checkUserLogin(this.loginReq).subscribe(\r\n        (data) => {\r\n          if (data[\"success\"]) {\r\n            this.storeTokenService.set(\"name\", data[\"data\"].partyName);\r\n            this.storeTokenService.set(\"code\", data[\"data\"].partyCode);\r\n            this.storeTokenService.set(\"id\", data[\"data\"].id);\r\n            // this.storeTokenService.set(\r\n            //   \"refreshToken\",\r\n            //   data[\"data\"].refreshToken\r\n            // );\r\n            //this.toast.success(errorData.Login_Success);\r\n            this.route.navigate([\"/pages\"]);\r\n          } else {\r\n            this.loginReq.password = '';\r\n            //this.toast.error(errorData.login_Error);\r\n          }\r\n        },\r\n        (error) => {\r\n          this.loginReq.password = '';\r\n        //  this.toast.error(errorData.Serever_Error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<h1 class=\"title\">Login</h1>\r\n\r\n<form (ngSubmit)=\"onSubmit(myForm)\" #myForm=\"ngForm\" aria-labelledby=\"title\">\r\n\r\n    <div class=\"form-control-group\">\r\n        <label class=\"label\" for=\"email\">Email address:</label>\r\n        <input nbInput fullWidth type=\"email\" name=\"email\" placeholder=\"Email address\" autofocus\r\n            [(ngModel)]=\"loginReq.partyCode\" required #email=\"ngModel\" class=\"form-control\"\r\n            [ngClass]=\"{'is-invalid': formSubmitted && email.invalid}\">\r\n            <div class=\"invalid-feedback\" *ngIf=\"formSubmitted && (email.invalid || email.dirty || email.touched)\" >\r\n                <span>Email is required</span>\r\n            </div>\r\n    </div>\r\n\r\n    <div class=\"form-control-group\">\r\n        <label class=\"label\" for=\"password\">Password:</label>\r\n        <input nbInput fullWidth name=\"password\" type=\"password\" placeholder=\"Password\"\r\n            [(ngModel)]=\"loginReq.password\" required #pass=\"ngModel\" class=\"form-control\"\r\n            [ngClass]=\"{'is-invalid': formSubmitted && pass.invalid}\">\r\n        <div class=\"invalid-feedback\"  *ngIf=\"formSubmitted && (pass.invalid || pass.dirty || pass.touched)\">\r\n            <span>Password is required</span>\r\n        </div>\r\n    </div>\r\n\r\n    <button style=\"background: #36454c;\" nbButton fullWidth status=\"success\" class=\"btn-login-gfl\">\r\n        Log In\r\n    </button>\r\n</form>"]}