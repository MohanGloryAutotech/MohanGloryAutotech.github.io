{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/@theme/model/login-class.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NbAuthComponent } from '@nebular/auth';\r\nimport { AuthComponent } from './auth.component';\r\nimport { NotFoundComponent } from 'app/pages/miscellaneous/not-found/not-found.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n    children: [{\r\n      path: '',\r\n      component: LoginComponent,\r\n    },]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NgxAuthRoutingModule {\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<nb-layout>\r\n  <nb-layout-column>\r\n    <nb-card>\r\n      <nb-card-body>\r\n        <nb-auth-block>\r\n          <router-outlet></router-outlet>\r\n        </nb-auth-block>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </nb-layout-column>\r\n</nb-layout>","export class LoginModal {\r\n    partyCode: any;\r\n    password: any;\r\n    constructor() {\r\n        this.password = '';\r\n        this.partyCode = '';\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { NgxAuthRoutingModule } from './auth-routing.module';\r\nimport { NbAuthModule, NbPasswordAuthStrategy } from '@nebular/auth';\r\nimport {\r\n  NbAlertModule,\r\n  NbButtonModule,\r\n  NbCardModule,\r\n  NbCheckboxModule,\r\n  NbInputModule,\r\n  NbLayoutModule,\r\n  NbToastrModule,\r\n} from '@nebular/theme';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ThemeModule } from '../@theme/theme.module';\r\nimport { AuthComponent } from './auth.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    NbAlertModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbCheckboxModule,\r\n    NgxAuthRoutingModule,\r\n    NbAuthModule,\r\n    NbCardModule,\r\n    NbLayoutModule,\r\n    ThemeModule,\r\n    NbToastrModule.forRoot(),\r\n  ],\r\n  declarations: [\r\n    LoginComponent,\r\n    AuthComponent,\r\n  ],\r\n})\r\nexport class AuthModule {\r\n}","import {\r\n  ChangeDetectionStrategy,\r\n\r\n  Component\r\n} from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport * as errorData from \"app/@theme/json/error.json\";\r\nimport { AuthService } from \"app/@theme/services/auth.service\";\r\nimport { JwtTokenService } from \"app/@theme/services/jwt-token.service\";\r\nimport { StoreTokenService } from \"app/@theme/services/store-token.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Md5 } from 'ts-md5/dist/md5';\r\nimport { LoginModal } from \"../../@theme/model/login-class\";\r\n@Component({\r\n  selector: \"nb-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LoginComponent {\r\n  public errorData: any = (errorData as any).default;\r\n  formSubmitted = false;\r\n  userPermission = [];\r\n  loginReq: LoginModal;\r\n  constructor(\r\n    private route: Router,\r\n    private toast: ToastrService,\r\n    private authService: AuthService,\r\n    private jwtToken: JwtTokenService,\r\n    private storeTokenService: StoreTokenService\r\n  ) {\r\n    this.loginReq = new LoginModal();\r\n    // let location = window.location;\r\n    // if (location[\"hostname\"] == \"150.107.188.188\")\r\n    //   window[\"myValue\"] = \"http://150.107.188.188:8080/\";\r\n    // else window[\"myValue\"] = \"http://13.235.71.124:8080/\";\r\n  }\r\n\r\n  // On submit button click\r\n  onSubmit(myForm) {\r\n    this.formSubmitted = true;\r\n    if (myForm.valid) {\r\n      let md5 = new Md5();\r\n      this.loginReq.password = md5.appendStr(this.loginReq.password).end()\r\n      this.authService.checkUserLogin(this.loginReq).subscribe(\r\n        (data) => {\r\n          if (data[\"success\"]) {\r\n            this.storeTokenService.set(\"name\", data[\"data\"].partyName);\r\n            this.storeTokenService.set(\"code\", data[\"data\"].partyCode);\r\n            this.storeTokenService.set(\"id\", data[\"data\"].id);\r\n            // this.storeTokenService.set(\r\n            //   \"refreshToken\",\r\n            //   data[\"data\"].refreshToken\r\n            // );\r\n            //this.toast.success(errorData.Login_Success);\r\n            this.route.navigate([\"/pages\"]);\r\n          } else {\r\n            this.loginReq.password = '';\r\n            //this.toast.error(errorData.login_Error);\r\n          }\r\n        },\r\n        (error) => {\r\n          this.loginReq.password = '';\r\n        //  this.toast.error(errorData.Serever_Error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<h1 class=\"title\">Login</h1>\r\n\r\n<form (ngSubmit)=\"onSubmit(myForm)\" #myForm=\"ngForm\" aria-labelledby=\"title\">\r\n\r\n    <div class=\"form-control-group\">\r\n        <label class=\"label\" for=\"email\">Email address:</label>\r\n        <input nbInput fullWidth type=\"email\" name=\"email\" placeholder=\"Email address\" autofocus\r\n            [(ngModel)]=\"loginReq.partyCode\" required #email=\"ngModel\" class=\"form-control\"\r\n            [ngClass]=\"{'is-invalid': formSubmitted && email.invalid}\">\r\n            <div class=\"invalid-feedback\" *ngIf=\"formSubmitted && (email.invalid || email.dirty || email.touched)\" >\r\n                <span>Email is required</span>\r\n            </div>\r\n    </div>\r\n\r\n    <div class=\"form-control-group\">\r\n        <label class=\"label\" for=\"password\">Password:</label>\r\n        <input nbInput fullWidth name=\"password\" type=\"password\" placeholder=\"Password\"\r\n            [(ngModel)]=\"loginReq.password\" required #pass=\"ngModel\" class=\"form-control\"\r\n            [ngClass]=\"{'is-invalid': formSubmitted && pass.invalid}\">\r\n        <div class=\"invalid-feedback\"  *ngIf=\"formSubmitted && (pass.invalid || pass.dirty || pass.touched)\">\r\n            <span>Password is required</span>\r\n        </div>\r\n    </div>\r\n\r\n    <button style=\"background: #36454c;\" nbButton fullWidth status=\"success\" class=\"btn-login-gfl\">\r\n        Log In\r\n    </button>\r\n</form>"],"sourceRoot":"webpack:///"}