{"version":3,"sources":["webpack:///src/app/pages/add-customer/add-customer.component.ts","webpack:///src/app/pages/add-customer/add-customer.component.html","webpack:///src/app/@theme/model/Party.ts","webpack:///src/app/pages/add-customer/add-new-customer/add-new-customer.component.ts","webpack:///src/app/pages/add-customer/add-new-customer/add-new-customer.component.html","webpack:///src/app/pages/add-customer/add-customer.module.ts","webpack:///src/app/@theme/services/category/category.service.ts","webpack:///src/app/pages/add-customer/add-customer-routing.module.ts"],"names":["AddCustomerComponent","partyService","commonService","partyList","setTitle","getAllParties","getAllPartyList","subscribe","data","selector","templateUrl","styleUrls","Party","AddNewCustomerComponent","toastr","route","categoryService","_route","party","categoryList","formSubmitted","partyValid","getAllCategory","currentParty","snapshot","paramMap","get","getPartyById","password","validatePartyCode","partyCode","navigate","myForm","valid","md5","String","appendStr","end","addNewParty","success","error","updateParty","cancelForm","addParty","AddCustomerModule","declarations","imports","CategoryService","httpClient","envUrl","providedIn","routes","path","component","AddCustomerRoutingModule","forChild","exports"],"mappings":"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","file":"pages-add-customer-add-customer-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Party } from 'app/@theme/model/Party';\r\nimport { CommonService } from 'app/@theme/services/common.service';\r\nimport { PartyService } from 'app/@theme/services/party.service';\r\n\r\n@Component({\r\n  selector: 'ngx-add-customer',\r\n  templateUrl: './add-customer.component.html',\r\n  styleUrls: ['./add-customer.component.scss']\r\n})\r\nexport class AddCustomerComponent implements OnInit {\r\n\r\n  partyList:Party[] = [];\r\n  constructor(\r\n    private partyService: PartyService,\r\n    private commonService:CommonService\r\n  ) {\r\n    this.commonService.setTitle('Party')\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllParties();\r\n  }\r\n\r\n  getAllParties(){\r\n    this.partyService.getAllPartyList().subscribe(\r\n      data=>{\r\n        if(data['success'])\r\n        this.partyList = data['data']\r\n        else\r\n        this.partyList = [];\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<nb-card class=\"nb-style\">\r\n    <!-- <nb-card-header class=\"nb-header\">\r\n        <div class=\"row\">\r\n            \r\n            <div class=\"col-md-9 col-7\">\r\n                <h2 class=\"nb-text\">Party</h2>\r\n            </div>\r\n        </div>  \r\n    </nb-card-header> -->\r\n    <nb-card-body>\r\n\r\n        <!--  ngx- DataTable  -->\r\n        <ngx-datatable [rows]=\"partyList\" [ngClass]=\"'bootstrap'\" [headerHeight]=\"31\" class=\"material\"\r\n            [footerHeight]=\"40\">\r\n            <ngx-datatable-column name=\"Action\" sortable=\"false\" class=\"first-width\">\r\n                <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n                    <nb-icon icon=\"edit\" status=\"primary\" [options]=\"{ animation: { type: 'zoom' } }\"\r\n                        [routerLink]=\"['/pages/party/edit',row.id]\"></nb-icon>\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Party Name\" prop=\"partyName\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Party Code\" prop=\"partyCode\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Category\" prop=\"categoryId\"></ngx-datatable-column>\r\n\r\n        </ngx-datatable>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 col-12 mobile-btn-center text-btn-right\">\r\n                <button class=\"btn btn-primary btn-sm btn-design btn-product\" routerLink=\"add\">ADD PARTY</button>\r\n            </div>\r\n        </div>\r\n    </nb-card-body>\r\n</nb-card>","export class Party {\r\n    id:Number;\r\n    categoryId: number;\r\n    partyCode: string;\r\n    partyName: string;\r\n    password: string;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Party } from 'app/@theme/model/Party';\r\nimport { CategoryService } from 'app/@theme/services/category/category.service';\r\nimport { CommonService } from 'app/@theme/services/common.service';\r\nimport { PartyService } from 'app/@theme/services/party.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Md5 } from 'ts-md5/dist/md5';\r\n@Component({\r\n  selector: 'ngx-add-new-customer',\r\n  templateUrl: './add-new-customer.component.html',\r\n  styleUrls: ['./add-new-customer.component.scss']\r\n})\r\nexport class AddNewCustomerComponent implements OnInit {\r\n\r\n  public party:Party = new Party();\r\n  public categoryList: any[]= [];\r\n  public formSubmitted:boolean =false;\r\n  public partyValid:boolean = false;\r\n  public currentParty:any;\r\n\r\n  constructor(\r\n    private partyService: PartyService,\r\n    private toastr: ToastrService,\r\n    private route: Router,\r\n    private categoryService: CategoryService,\r\n    private _route: ActivatedRoute,\r\n    private commonService:CommonService\r\n  ) { \r\n    this.commonService.setTitle('Add Party');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCategory();\r\n    this.currentParty = this._route.snapshot.paramMap.get('id');\r\n    if(this.currentParty)\r\n      this.getPartyById();\r\n  }\r\n\r\n  getAllCategory(){\r\n    this.categoryService.getAllCategory().subscribe(\r\n      data=>{\r\n        if(data['success'])\r\n          this.categoryList = data['data'];\r\n      }\r\n    )\r\n  }\r\n\r\n  getPartyById(){\r\n    this.partyService.getPartyById(this.currentParty).subscribe(\r\n      data=>{\r\n        if(data['success'])\r\n          this.party = data['data'];\r\n          this.party.password = null;\r\n      }\r\n    )\r\n  }\r\n\r\n  validatePartyCode(){\r\n    this.partyService.validatePartyCode(this.party.partyCode).subscribe(\r\n      data=>{\r\n        if(data['success'])\r\n          this.partyValid = data['data'];\r\n      }\r\n    )\r\n  }\r\n\r\n  cancelForm(){\r\n    this.route.navigate(['pages/party']);\r\n  }\r\n\r\n  addParty(myForm){\r\n    this.formSubmitted = true;\r\n    if(myForm.valid){\r\n      let md5 = new Md5();\r\n      this.party.password = String(md5.appendStr(this.party.password).end())\r\n      this.partyService.addNewParty(this.party).subscribe(\r\n        data=>{\r\n          if(data['success']){\r\n            this.toastr.success('Party added successfully');\r\n            this.route.navigate(['pages/party']);\r\n          }\r\n        },error=>{\r\n          this.toastr.error('Error adding party');\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  updateParty(myForm){\r\n    this.formSubmitted = true;\r\n    if(myForm.valid){\r\n      let md5 = new Md5();\r\n      this.party.password = String(md5.appendStr(this.party.password).end())\r\n      this.partyService.updateParty(this.party).subscribe(\r\n        data=>{\r\n          if(data['success']){\r\n            this.toastr.success('Party updated successfully');\r\n            this.route.navigate(['pages/party']);\r\n          }\r\n        },error=>{\r\n          this.toastr.error('Error updating party');\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n}\r\n","<nb-card class=\"nb-style\">\r\n    <nb-card-body>\r\n        <div>\r\n            <form #myForm=\"ngForm\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-2\"></div>\r\n                    <div class=\"col-md-4 col-12\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"required\">Party Name</label>\r\n                            <input type=\"text\" name=\"partyName\" class=\"form-control\" #partyName1=\"ngModel\"\r\n                                [(ngModel)]='party.partyName' required\r\n                                [ngClass]=\"{'is-invalid':(partyName1.invalid)&&(formSubmitted || partyName1.touched)}\"\r\n                                placeholder=\"Party name\">\r\n                            <div class=\"invalid-feedback\"\r\n                                *ngIf=\"(partyName1.invalid)&&(formSubmitted || partyName1.touched)\">\r\n                                <span>Party name is required.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4 col-12\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"required\">Party Code</label>\r\n                            <input type=\"text\" name=\"quality\" class=\"form-control\" #partyCode1=\"ngModel\"\r\n                                [(ngModel)]='party.partyCode' required\r\n                                [ngClass]=\"{'is-invalid':(partyCode1.invalid)&&(formSubmitted || partyCode1.touched)}\"\r\n                                placeholder=\"Party code\" (change)=\"validatePartyCode()\">\r\n                            <div class=\"invalid-feedback\"\r\n                                *ngIf=\"(partyCode1.invalid)&&(formSubmitted || partyCode1.touched)\">\r\n                                <span>Party code is required.</span>\r\n                            </div>\r\n                            <div class=\"text-danger\" style=\"font-size: small;\" *ngIf=\"partyValid\">\r\n                                <span>Party Code is already Exist </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-2\"></div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-2\"></div>\r\n                    <div class=\"col-md-4 col-12\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"required\">Category</label>\r\n                            <ng-select name=\"categoryId\" [(ngModel)]='party.categoryId' required #categoryId1=\"ngModel\"\r\n                                [ngClass]=\"{'is-invalid': formSubmitted && categoryId1.invalid}\"\r\n                                placeholder=\"Select Category\" class=\"required-error-dropdown\">\r\n                                <ng-option *ngFor=\"let c of categoryList\" [value]=\"c.id\">{{c.category}}</ng-option>\r\n                            </ng-select>\r\n                            <div class=\"text-danger\" style=\"font-size: small;\"\r\n                                *ngIf=\"(categoryId1.invalid)&&(formSubmitted || categoryId1.touched)\">\r\n                                <span>Category is required.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4 col-12\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"required\">Password</label>\r\n                            <input type=\"password\" name=\"password\" class=\"form-control\" #password1=\"ngModel\"\r\n                                [(ngModel)]='party.password' required\r\n                                [ngClass]=\"{'is-invalid':(password1.invalid)&&(formSubmitted || password1.touched)}\"\r\n                                placeholder=\"Password\">\r\n                            <div class=\"invalid-feedback\"\r\n                                *ngIf=\"(password1.invalid)&&(formSubmitted || password1.touched)\">\r\n                                <span>Password is required.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-2\"></div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6 col-6 text-right\">\r\n                        <div class=\"padding-bt-tp\">\r\n                            <button class=\"btn btn-primary btn-sm btn-design btn-product\" type=\"button\"\r\n                                (click)=\"cancelForm()\">CANCEL</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-6 text-left\">\r\n                        <div class=\"padding-bt-tp\">\r\n                            <button type=\"button\" class=\"btn btn-primary btn-sm btn-design btn-product\" style=\"margin-right:20px\"\r\n                                (click)=\"!currentParty?addParty(myForm):updateParty(myForm);\">SAVE</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </nb-card-body>\r\n</nb-card>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AddCustomerRoutingModule } from './add-customer-routing.module';\r\nimport { AddCustomerComponent } from './add-customer.component';\r\nimport { AddNewCustomerComponent } from './add-new-customer/add-new-customer.component';\r\nimport { SharedModule } from 'app/@theme/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddCustomerComponent, AddNewCustomerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AddCustomerRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class AddCustomerModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { CommonService } from '../common.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n  constructor(private httpClient:HttpClient,private commonService:CommonService) { \r\n  }\r\n\r\n  getAllCategory(){\r\n    return this.httpClient.get(this.commonService.envUrl()+'allCategory');\r\n  }\r\n  \r\n}\r\n","import { compileComponentFromMetadata } from \"@angular/compiler\";\r\nimport { Component, NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AddNewProductComponent } from \"../add-product/add-new-product/add-new-product.component\";\r\n\r\nimport { AddCustomerComponent } from \"./add-customer.component\";\r\nimport { AddNewCustomerComponent } from \"./add-new-customer/add-new-customer.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: AddCustomerComponent,\r\n  },\r\n  {\r\n    path: \"add\",\r\n    component: AddNewCustomerComponent,\r\n  },\r\n  {\r\n    path: \"edit/:id\",\r\n    component: AddNewCustomerComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddCustomerRoutingModule {}\r\n"]}