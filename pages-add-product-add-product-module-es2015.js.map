{"version":3,"sources":["./src/app/pages/add-product/add-price/add-price.component.ts","./src/app/pages/add-product/add-price/add-price.component.html","./src/app/pages/add-product/add-product-routing.module.ts","./src/app/pages/add-product/add-new-product/add-new-product.component.ts","./src/app/pages/add-product/add-new-product/add-new-product.component.html","./src/app/@theme/model/Price-categpry.ts","./src/app/pages/add-product/add-product.component.ts","./src/app/@theme/model/Product.ts","./src/app/pages/add-product/add-product.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACO;AACO;AACG;AACF;AACI;AAC1B;;;;;;;;;;;;ICWf,0EAEI;IAAA,uEAAM;IAAA,+EAAoB;IAAA,4DAAO;IACrC,4DAAM;;;;;IARV,0EAEI;IAAA,wEAAO;IAAA,qEAAU;IAAA,4DAAQ;IACzB,gFAEA;IAFiC,oWAAmC;IAApE,4DAEA;IAAA,0HAEI;IAER,4DAAM;;;;IAN+B,0DAAmC;IAAnC,iGAAmC;IAGhE,0DAA6D;IAA7D,sHAA6D;;;IAuB7D,0EAEI;IAAA,uEAAM;IAAA,mEAAQ;IAAA,4DAAO;IACzB,4DAAM;;;;IARN,gFAKA;IAJ6B,8SAAuB,4UACf,CAAC,KADc;IADpD,4DAKA;IAAA,wIAEI;;;;;;IANA,uGAAwB;IAAC,kFAAuB;IAItB,0DAAwC;IAAxC,uGAAwC;;;IAf1F,yEACI;IAAA,0EACI;IAAA,wFAGI;IAAA,sFACuB;IAEvB,2FACI;IAAA,0IACI;IAUR,4DAAuB;IAE3B,4DAAgB;IACpB,4DAAM;IACV,4DAAM;;;IArBM,0DAAkB;IAAlB,kFAAkB;IAEoC,0DAAkB;IAAlB,2EAAkB;IAGxB,0DAAkB;IAAlB,2EAAkB;;;;IA3BlF,sEACI;IAAA,gFACI;IAAA,yEACI;IAAA,oEAA4B;IAC5B,yEACI;IAAA,mHAEI;IAQR,4DAAM;IACV,4DAAM;IAGV,mHACI;IAyBA,yEACI;IAAA,yEACI;IAAA,0EACI;IAAA,8EACmB;IAAnB,sTAAkB;IAAC,kEAAM;IAAA,4DAAS;IAClC,8EACgC;IAA5B,sYAA2B;IAAC,gEAAI;IAAA,4DAAS;IACjD,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAO;IACX,4DAAM;;;IAnDkC,0DAA0B;IAA1B,2FAA0B;IAc7C,0DAA6B;IAA7B,8FAA6B;;;IAsClD,sEACI;IAAA,qEAAI;IAAA,gFAAqB;IAAA,4DAAK;IAClC,4DAAM;;ADrDP,MAAM,iBAAiB;IAS5B,YACU,MAAsB,EACtB,cAA8B,EAC9B,KAAa,EACb,MAAqB,EACrB,YAA0B,EAC1B,aAA4B;QAL5B,WAAM,GAAN,MAAM,CAAgB;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAQ;QACb,WAAM,GAAN,MAAM,CAAe;QACrB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAd/B,cAAS,GAAoB,EAAE,CAAC;QAEhC,kBAAa,GAAY,KAAK,CAAC;QAE/B,iBAAY,GAAQ,EAAE,CAAC;QACvB,eAAU,GAAY,IAAI,CAAC;QAWhC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,IAAI,CAAC,cAAc,EAAC;YACtB,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC;IACH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,SAAS,CAC1C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE;oBACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;oBACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBACxB;;oBAAM,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAChC;;gBAAM,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACjC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAC/D,IAAI,GAAE;YACJ,IAAG,IAAI,CAAC,SAAS,CAAC,EAAC;gBACjB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC;aACvC;iBACG;gBACF,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAChC;QACH,CAAC,EAAC,KAAK,GAAE;YACP,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC;QAC5C,CAAC,CACF;IACH,CAAC;IAED,uBAAuB;QACrB,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CACpE,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI;oBAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;aACzD;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBAC5B,IAAI,CAAC,GAAG,IAAI,4EAAa,EAAE,CAAC;oBAC5B,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC;oBACpB,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ;oBACvB,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;oBAElC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,CAAC,CAAC,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;aAC5B;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC7C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,CAAC,EAAE,QAAQ,EAAE,QAAQ;QAC3B,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC9C,IAAI,OAAO,IAAI,EAAE,EAAE;YACjB,IAAI,CAAC,KAAK,GAAG,OAAO,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC;YACvD,IAAI,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE;gBAC9B,IAAI,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAI,KAAK,IAAI,IAAI,EAAE;oBACjB,KAAK,CAAC,KAAK,EAAE,CAAC;oBACd,aAAa,CAAC,QAAQ,CAAC,CAAC;iBACzB;YACH,CAAC,EAAE,EAAE,CAAC,CAAC;SACR;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,SAAS,CAAC,MAAM;QACd,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,MAAM,CAAC,KAAK,EAAE;YAChB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CACrD,CAAC,IAAI,EAAE,EAAE;gBACP,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;oBACnB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;oBAC1C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;iBACtC;;oBAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1C,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACR,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;YAC7C,CAAC,CACF,CAAC;SACH;IACH,CAAC;;kFApHU,iBAAiB;iGAAjB,iBAAiB;QCb9B,6EACI;QAKA,+EACI;QAAA,8GACI;QAwDJ,6GACI;QAER,4DAAe;QACnB,4DAAU;;QA7DG,0DAAkB;QAAlB,gFAAkB;QAyDlB,0DAAmB;QAAnB,iFAAmB;;6FDnDnB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAC8B;AACjB;;;AAEpE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iGAAsB;KAClC;IACD;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,iGAAsB;KAClC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,iGAAsB;KAClC;IACD;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,gFAAiB;KAC7B;CACF,CAAC;AAMK,MAAM,uBAAuB;;sGAAvB,uBAAuB;wKAAvB,uBAAuB,kBAHzB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,uBAAuB,uFAFxB,4DAAY;6FAEX,uBAAuB;cAJnC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACO;AAEN;AACgB;AACF;AACI;AAC1B;;;;;;;;;;;;ICcX,gFAA6D;IAAA,uDAAa;IAAA,4DAAY;;;IAA7C,gFAAmB;IAAC,0DAAa;IAAb,8EAAa;;;IAE9E,0EAEI;IAAA,uEAAM;IAAA,4EAAiB;IAAA,4DAAO;IAClC,4DAAM;;;IAWF,gFAA6D;IAAA,uDAAa;IAAA,4DAAY;;;IAA7C,gFAAmB;IAAC,0DAAa;IAAb,8EAAa;;;IAE9E,0EAEI;IAAA,uEAAM;IAAA,+EAAoB;IAAA,4DAAO;IACrC,4DAAM;;;IAcF,gFACI;IAAA,uDACJ;IAAA,4DAAY;;;IAFqC,wFAA2B;IACxE,0DACJ;IADI,iGACJ;;;IAEJ,0EAEI;IAAA,uEAAM;IAAA,gFAAqB;IAAA,4DAAO;IACtC,4DAAM;;;IAWF,gFAAqE;IAAA,uDACrE;IAAA,4DAAY;;;IADiC,oFAAuB;IAAC,0DACrE;IADqE,4FACrE;;;IAEJ,0EAEI;IAAA,uEAAM;IAAA,oFAAyB;IAAA,4DAAO;IAC1C,4DAAM;;;IAeN,0EAEI;IAAA,uEAAM;IAAA,gFAAqB;IAAA,4DAAO;IACtC,4DAAM;;;ADpF3B,MAAM,sBAAsB;IAUjC,YACU,cAA8B,EAC9B,MAAqB,EACrB,KAAa,EACb,YAA0B,EAC1B,MAAsB,EACtB,aAA4B;QAL5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAe;QACrB,UAAK,GAAL,KAAK,CAAQ;QACb,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAgB;QACtB,kBAAa,GAAb,aAAa,CAAe;QAdtC,YAAO,GAAY,IAAI,+DAAO,EAAE,CAAC;QACjC,kBAAa,GAAY,KAAK,CAAC;QAC/B,iBAAY,GAAQ,EAAE,CAAC;QACvB,gBAAW,GAAQ,EAAE,CAAC;QACtB,aAAQ,GAAQ,EAAE,CAAC;QACnB,oBAAe,GAAQ,EAAE,CAAC;QAWxB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IAC5C,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAG,IAAI,CAAC,gBAAgB,EAAC;YACvB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;IACH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CACjE,IAAI,GAAE;YACJ,IAAG,IAAI,CAAC,SAAS,CAAC,EAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;aAC7B;;gBAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACjC,CAAC,EACD,KAAK,GAAE;YACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC7C,CAAC,CACF;IACH,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,SAAS,CAC1C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,GAAE,CAAC,CACd,CAAC;IACJ,CAAC;IAED,aAAa;QACX,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,SAAS,CACzC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,GAAE,CAAC,CACd,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAC7C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACtC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,GAAE,CAAC,CACd,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CACtC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,GAAE,CAAC,CACd,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,MAAM;QACf,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAG,MAAM,CAAC,KAAK,EAAC;YACd,4BAA4B;YAC5B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CACvD,IAAI,GAAE;gBACJ,IAAG,IAAI,CAAC,SAAS,CAAC,EAAC;oBACjB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,4BAA4B,CAAC;oBACjD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;iBACtC;YACH,CAAC,EACD,KAAK,GAAE;YAEP,CAAC,CACF;SACF;IACH,CAAC;IAED,SAAS,CAAC,MAAM;QACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,aAAa,CAAC,MAAM;QAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAG,MAAM,CAAC,KAAK,EAAC;YACd,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CACvD,IAAI,GAAE;gBACJ,IAAG,IAAI,CAAC,SAAS,CAAC,EAAC;oBACjB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,8BAA8B,CAAC;oBACnD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;iBACtC;YACH,CAAC,EACD,KAAK,GAAE;YAEP,CAAC,CACF;SACF;IACH,CAAC;;4FAxHU,sBAAsB;sGAAtB,sBAAsB;;QCdnC,6EACI;QAQA,+EACI;QAAA,sEACI;QAAA,gFACI;QAAA,yEACI;QAAA,oEAA4B;QAC5B,yEACI;QAAA,yEAEI;QAAA,wEAAO;QAAA,gEAAI;QAAA,4DAAQ;QACnB,mFAGI;QAHqB,4MAAiC;QAGtD,gIAA6D;QACjE,4DAAY;QACZ,oHAEI;QAGR,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,0EACI;QAAA,yEAAO;QAAA,mEAAO;QAAA,4DAAQ;QACtB,qFAGI;QAHwB,+MAAoC;QAG5D,gIAA6D;QACjE,4DAAY;QACZ,oHAEI;QAER,4DAAM;QACV,4DAAM;QACN,qEAA4B;QAChC,4DAAM;QAEN,0EACI;QAAA,qEAA4B;QAC5B,0EACI;QAAA,0EACI;QAAA,yEAAO;QAAA,qEAAS;QAAA,4DAAQ;QACxB,qFAGI;QAHyB,gNAAqC;QAG9D,gIACI;QAER,4DAAY;QACZ,oHAEI;QAER,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,0EACI;QAAA,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAC1B,qFAII;QAJ4B,mNAAwC;QAIpE,gIAAqE;QAEzE,4DAAY;QACZ,oHAEI;QAER,4DAAM;QACV,4DAAM;QACN,qEAA4B;QAChC,4DAAM;QAEN,0EACI;QAAA,qEAA4B;QAC5B,0EACI;QAAA,0EACI;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,iFAIA;QAHI,qMAA8B;QADlC,4DAIA;QAAA,qHAEI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QAGN,0EAGI;QAAA,2EACI;QAAA,2EACI;QAAA,8EACgC;QAA5B,4RAAS,kBAAiB,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACnD,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,8EAEgF;QAA5E,mTAAgC,sBAAqB,GAAG,mBAAkB,IAAC;QAAC,gEAAI;QAAA,4DAAS;QACjG,4DAAM;QACV,4DAAM;QACV,4DAAM;QAGV,4DAAO;QACX,4DAAM;QACV,4DAAe;QACnB,4DAAU;;;;;;;QA5G2C,2DAAiC;QAAjC,4FAAiC;QAG3C,0DAA6B;QAA7B,iFAA6B;QAGxC,0DAAyD;QAAzD,mHAAyD;QAUjC,0DAAoC;QAApC,+FAAoC;QAGjD,0DAA6B;QAA7B,oFAA6B;QAGxC,0DAA+D;QAA/D,mHAA+D;QAatC,0DAAqC;QAArC,gGAAqC;QAGnD,0DAAqC;QAArC,qFAAqC;QAKhD,0DAAiE;QAAjE,mHAAiE;QASrC,0DAAwC;QAAxC,mGAAwC;QAIzD,0DAAiC;QAAjC,wFAAiC;QAI5C,0DAAuE;QAAvE,qHAAuE;QAcvE,0DAA8B;QAA9B,yFAA8B;QAI9B,0DAA+D;QAA/D,qHAA+D;;6FDlFlF,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEbD;AAAA;AAAO,MAAM,aAAa;IAOtB;QACI,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACzB,CAAC;CACJ;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;6FAAnB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;ACND;AAAA;AAAO,MAAM,OAAO;CAOnB;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEwB;AACT;AACuB;AAC7B;AACY;;AAW7D,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBANlB;YACP,4DAAY;YACZ,mFAAuB;YACvB,oEAAY;SACb;mIAEU,gBAAgB,mBAPZ,0EAAmB,EAAE,iGAAsB,EAAE,gFAAiB,aAE3E,4DAAY;QACZ,mFAAuB;QACvB,oEAAY;6FAGH,gBAAgB;cAR5B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,0EAAmB,EAAE,iGAAsB,EAAE,gFAAiB,CAAC;gBAC9E,OAAO,EAAE;oBACP,4DAAY;oBACZ,mFAAuB;oBACvB,oEAAY;iBACb;aACF","file":"pages-add-product-add-product-module-es2015.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { PriceCategory } from \"app/@theme/model/Price-categpry\";\r\nimport { CommonService } from \"app/@theme/services/common.service\";\r\nimport { PartyService } from \"app/@theme/services/party.service\";\r\nimport { ProductService } from \"app/@theme/services/product.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"ngx-add-price\",\r\n  templateUrl: \"./add-price.component.html\",\r\n  styleUrls: [\"./add-price.component.scss\"],\r\n})\r\nexport class AddPriceComponent implements OnInit {\r\n  public priceList: PriceCategory[] = [];\r\n  public currentProduct: number;\r\n  public formSubmitted: boolean = false;\r\n  public index: any;\r\n  public categoryList: any = [];\r\n  public isCategory: boolean = true;\r\n  public currentProductData:any;\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private productService: ProductService,\r\n    private route: Router,\r\n    private toastr: ToastrService,\r\n    private partyService: PartyService,\r\n    private commonService: CommonService,\r\n  ) {\r\n    this.commonService.setTitle('Add Price');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentProduct = Number(this._route.snapshot.paramMap.get(\"id\"));\r\n    this.getProductListById();\r\n    this.getAllCategory();\r\n    if (this.currentProduct){\r\n      this.getProductPriceListById();\r\n    } \r\n  }\r\n\r\n  getAllCategory() {\r\n    this.partyService.getAllCategory().subscribe(\r\n      (data) => {\r\n        if (data[\"success\"]) {\r\n          if (data[\"data\"].length) {\r\n            this.categoryList = data[\"data\"];\r\n            this.isCategory = true;\r\n          } else this.isCategory = false;\r\n        } else this.isCategory = false;\r\n      },\r\n      (error) => {\r\n        this.isCategory = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  getProductListById(){\r\n    this.productService.getProductById(this.currentProduct).subscribe(\r\n      data=>{\r\n        if(data['success']){\r\n          this.currentProductData = data['data']\r\n        }\r\n        else{\r\n          this.toastr.error(data['msg']);\r\n        }\r\n      },error=>{\r\n        this.toastr.error('Internal server error')\r\n      }\r\n    )\r\n  }\r\n\r\n  getProductPriceListById() {\r\n    this.productService.getProductPriceById(this.currentProduct).subscribe(\r\n      (data) => {\r\n        if (data[\"success\"]) {\r\n          if (data[\"data\"] != null) this.priceList = data[\"data\"];\r\n        } else {\r\n          this.categoryList.forEach(e => {\r\n            let p = new PriceCategory();\r\n            p.categoryId = e.id;\r\n            p.category = e.category\r\n            p.productId = this.currentProduct;\r\n\r\n            this.priceList.push(p);\r\n          });\r\n          console.log(this.priceList)\r\n        }\r\n      },\r\n      (error) => {\r\n        this.toastr.error(\"Internal server error\");\r\n      }\r\n    );\r\n  }\r\n\r\n  onKeyUp(e, rowIndex, colIndex) {\r\n    var keyCode = e.keyCode ? e.keyCode : e.which;\r\n    if (keyCode == 13) {\r\n      this.index = \"price\" + (rowIndex + 1) + \"-\" + colIndex;\r\n      let interval = setInterval(() => {\r\n        let field = document.getElementById(this.index);\r\n        if (field != null) {\r\n          field.focus();\r\n          clearInterval(interval);\r\n        }\r\n      }, 10);\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.route.navigate([\"pages/order\"]);\r\n  }\r\n\r\n  savePrice(myForm) {\r\n    this.formSubmitted = true;\r\n    if (myForm.valid) {\r\n      this.productService.savePrice(this.priceList).subscribe(\r\n        (data) => {\r\n          if (data[\"success\"]) {\r\n            this.toastr.success(\"Saved successfully\");\r\n            this.route.navigate([\"pages/order\"]);\r\n          } else this.toastr.success(data[\"msg\"]);\r\n        },\r\n        (error) => {\r\n          this.toastr.error(\"Internal server error\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<nb-card class=\"nb-style\">\r\n    <!-- <nb-card-header class=\"nb-header\">\r\n        <div>\r\n            <h2 class=\"nb-text\">Add Price</h2>\r\n        </div>\r\n    </nb-card-header> -->\r\n    <nb-card-body>\r\n        <div *ngIf=\"isCategory\">\r\n            <form #myForm=\"ngForm\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-2\"></div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\" *ngIf=\"currentProductData\">\r\n\r\n                            <label>Product-ID</label>\r\n                            <input type=\"text\" name=\"typeId\" [(ngModel)]='currentProductData.id' required #product=\"ngModel\"\r\n                                [ngClass]=\"{'is-invalid': formSubmitted && product.invalid}\">\r\n                            <div class=\"text-danger\" style=\"font-size: small;\"\r\n                                *ngIf=\"(product.invalid)&&(formSubmitted || product.touched)\">\r\n                                <span>Product is required.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- For Ngx DataTable -->\r\n            <div class=\"row\" *ngIf=\"priceList.length != 0\">\r\n                <div class=\"col-md-12\">\r\n                    <ngx-datatable #table class=\"material common-table datatable-auto-height\"\r\n                        [rows]=\"priceList\" [headerHeight]=\"31\" [footerHeight]=\"31\">\r\n\r\n                        <ngx-datatable-column name=\"Category\" prop=\"category\" [sortable]=\"false\" [width]=\"300\">\r\n                        </ngx-datatable-column>\r\n\r\n                        <ngx-datatable-column name=\"Price\" prop=\"price\" [sortable]=\"false\" [width]=\"300\">\r\n                            <ng-template let-row=\"row\" ngx-datatable-cell-template let-rowIndex=\"rowIndex\">\r\n                                <input class=\"tableForm\" type=\"number\" #price=\"ngModel\"\r\n                                    name='price{{rowIndex}}' [(ngModel)]=\"row.price\"\r\n                                    (keyup)=\"onKeyUp($event,rowIndex,2)\"\r\n                                    [id]=\"'price'+rowIndex+'-2'\" required\r\n                                    [ngClass]=\"{'is-invalid': formSubmitted && price.invalid}\" min=\"0\">\r\n                                <div class=\"invalid-feedback\" *ngIf=\"formSubmitted && (price.invalid)\"\r\n                                    style=\"display: inline-block;\">\r\n                                    <span>Required</span>\r\n                                </div>\r\n                            </ng-template>\r\n                        </ngx-datatable-column>\r\n\r\n                    </ngx-datatable>\r\n                </div>\r\n            </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 mobile-btn-center text-btn-right\">\r\n                        <div class=\"padding-bt-tp\">\r\n                            <button class=\"btn btn-primary btn-sm btn-design btn-product\" type=\"button\" style=\"margin-right: 10px;\"\r\n                            (click)=\"cancel()\">CANCEL</button>\r\n                            <button type=\"button\" class=\"btn btn-primary btn-sm btn-design btn-product\" style=\"margin-right:20px\"\r\n                                (click)=\"savePrice(myForm)\">SAVE</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div *ngIf=\"!isCategory\">\r\n            <h3>No category available</h3>\r\n        </div>\r\n    </nb-card-body>\r\n</nb-card>","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AddNewProductComponent } from \"./add-new-product/add-new-product.component\";\r\nimport { AddPriceComponent } from \"./add-price/add-price.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: AddNewProductComponent,\r\n  },\r\n  {\r\n    path: \"add\",\r\n    component: AddNewProductComponent,\r\n  },\r\n  {\r\n    path: \"edit/:id\",\r\n    component: AddNewProductComponent,\r\n  },\r\n  {\r\n    path: \"addPrice/:id\",\r\n    component: AddPriceComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddProductRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PlaceOrder } from 'app/@theme/model/order';\r\nimport { Product } from 'app/@theme/model/Product';\r\nimport { CommonService } from 'app/@theme/services/common.service';\r\nimport { OrderService } from 'app/@theme/services/order.service';\r\nimport { ProductService } from 'app/@theme/services/product.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'ngx-add-new-product',\r\n  templateUrl: './add-new-product.component.html',\r\n  styleUrls: ['./add-new-product.component.scss']\r\n})\r\nexport class AddNewProductComponent implements OnInit {\r\n\r\n  product: Product = new Product();\r\n  formSubmitted: boolean = false;\r\n  capacityList: any = [];\r\n  qualityList: any = [];\r\n  typeList: any = [];\r\n  packageSizeList: any = [];\r\n  currentProductId: Number;\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private toastr: ToastrService,\r\n    private route: Router,\r\n    private orderService: OrderService,\r\n    private _route: ActivatedRoute,\r\n    private commonService: CommonService\r\n  ) {\r\n    this.commonService.setTitle('Add Product');\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.currentProductId = Number(this._route.snapshot.paramMap.get('id'));\r\n    this.getAllCapacityList();\r\n    this.getAllQuality();\r\n    this.getAllPackageSize();\r\n    this.getAllTypes();\r\n    if(this.currentProductId){\r\n      this.getProductById();\r\n    }\r\n  }\r\n\r\n  getProductById(){\r\n    this.productService.getProductById(this.currentProductId).subscribe(\r\n      data=>{\r\n        if(data['success']){\r\n          this.product = data['data'];\r\n        }\r\n        else\r\n        this.toastr.error(data['msg']);\r\n      },\r\n      error=>{\r\n        this.toastr.error('Internal server error');\r\n      }\r\n    )\r\n  }\r\n\r\n  getAllCapacityList() {\r\n    this.orderService.getAllCapacity().subscribe(\r\n      (data) => {\r\n        this.capacityList = data[\"data\"];\r\n      },\r\n      (error) => {}\r\n    );\r\n  }\r\n\r\n  getAllQuality() {\r\n    this.orderService.getAllQuality().subscribe(\r\n      (data) => {\r\n        this.qualityList = data[\"data\"];\r\n      },\r\n      (error) => {}\r\n    );\r\n  }\r\n\r\n  getAllPackageSize() {\r\n    this.orderService.getAllPackageSize().subscribe(\r\n      (data) => {\r\n        this.packageSizeList = data[\"data\"];\r\n      },\r\n      (error) => {}\r\n    );\r\n  }\r\n\r\n  getAllTypes() {\r\n    this.orderService.getAllType().subscribe(\r\n      (data) => {\r\n        this.typeList = data[\"data\"];\r\n      },\r\n      (error) => {}\r\n    );\r\n  }\r\n\r\n  addProduct(myForm){\r\n    this.formSubmitted = true;\r\n    if(myForm.valid){\r\n      //call api for add product..\r\n      this.productService.addNewProduct(this.product).subscribe(\r\n        data=>{\r\n          if(data['success']){\r\n            this.toastr.success('Product added successfully')\r\n            this.route.navigate(['pages/order']);\r\n          }\r\n        },\r\n        error=>{\r\n          \r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  resetForm(myForm){\r\n    this.route.navigate(['pages/order']);\r\n  }\r\n\r\n  updateProduct(myForm){\r\n    this.formSubmitted = true;\r\n    if(myForm.valid){\r\n      this.productService.updateProduct(this.product).subscribe(\r\n        data=>{\r\n          if(data['success']){\r\n            this.toastr.success('Product updated successfully')\r\n            this.route.navigate(['pages/order']);\r\n          }\r\n        },\r\n        error=>{\r\n          \r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n","<nb-card class=\"nb-style\">\r\n    <!-- <nb-card-header class=\"nb-header\">\r\n        <div *ngIf=\"!currentProductId\">\r\n            <h2 class=\"nb-text\">Add New Product</h2>\r\n        </div>\r\n        <div *ngIf=\"currentProductId\">\r\n            <h2 class=\"nb-text\">Update Product</h2>\r\n        </div>\r\n    </nb-card-header> -->\r\n    <nb-card-body>\r\n        <div>\r\n            <form #myForm=\"ngForm\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-2\"></div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n\r\n                            <label>Type</label>\r\n                            <ng-select name=\"typeId\" [(ngModel)]='product.productType' required #type1=\"ngModel\"\r\n                                [ngClass]=\"{'is-invalid': formSubmitted && type1.invalid}\" placeholder=\"Select Type\"\r\n                                class=\"required-error-dropdown\">\r\n                                <ng-option *ngFor=\"let type of typeList\" [value]=\"type.type\">{{type.type}}</ng-option>\r\n                            </ng-select>\r\n                            <div class=\"text-danger\" style=\"font-size: small;\"\r\n                                *ngIf=\"(type1.invalid)&&(formSubmitted || type1.touched)\">\r\n                                <span>Type is required.</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Quality</label>\r\n                            <ng-select name=\"qualityId\" [(ngModel)]='product.productQuality' required\r\n                                #quality1=\"ngModel\" [ngClass]=\"{'is-invalid': formSubmitted && quality1.invalid}\"\r\n                                placeholder=\"Select Quality\" class=\"required-error-dropdown\">\r\n                                <ng-option *ngFor=\"let q of qualityList\" [value]=\"q.quality\">{{q.quality}}</ng-option>\r\n                            </ng-select>\r\n                            <div class=\"text-danger\" style=\"font-size: small;\"\r\n                                *ngIf=\"(quality1.invalid)&&(formSubmitted || quality1.touched)\">\r\n                                <span>Quality is required.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-2\"></div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-2\"></div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Catpacity</label>\r\n                            <ng-select name=\"capacityId\" [(ngModel)]='product.productCapacity' required\r\n                                #capacity1=\"ngModel\" [ngClass]=\"{'is-invalid': formSubmitted && capacity1.invalid}\"\r\n                                placeholder=\"Select Capacity\" class=\"required-error-dropdown\">\r\n                                <ng-option *ngFor=\"let capacity of capacityList\" [value]=\"capacity.capacity\">\r\n                                    {{capacity.capacity}}\r\n                                </ng-option>\r\n                            </ng-select>\r\n                            <div class=\"text-danger\" style=\"font-size: small;\"\r\n                                *ngIf=\"(capacity1.invalid)&&(formSubmitted || capacity1.touched)\">\r\n                                <span>Capacity is required.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>PackageSize</label>\r\n                            <ng-select name=\"packageSizeId\" [(ngModel)]='product.productPackageSize' required\r\n                                #packageSize1=\"ngModel\"\r\n                                [ngClass]=\"{'is-invalid': formSubmitted && packageSize1.invalid}\"\r\n                                placeholder=\"Select PackageSize\" class=\"required-error-dropdown\">\r\n                                <ng-option *ngFor=\"let p of packageSizeList\" [value]=\"p.packageSize\">{{p.packageSize}}\r\n                                </ng-option>\r\n                            </ng-select>\r\n                            <div class=\"text-danger\" style=\"font-size: small;\"\r\n                                *ngIf=\"(packageSize1.invalid)&&(formSubmitted || packageSize1.touched)\">\r\n                                <span>Package-size is required.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-2\"></div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-2\"></div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Quantity</label>\r\n                            <input type=\"number\" name=\"quantity\" class=\"form-control\" #quantity=\"ngModel\"\r\n                                [(ngModel)]='product.quantity' required\r\n                                [ngClass]=\"{'is-invalid':(quantity.invalid)&&(formSubmitted || quantity.touched)}\"\r\n                                placeholder=\"Quantity\">\r\n                            <div class=\"invalid-feedback\"\r\n                                *ngIf=\"(quantity.invalid)&&(formSubmitted || quantity.touched)\">\r\n                                <span>Quantity is required.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row\">\r\n\r\n\r\n                    <div class=\"col-md-6 col-6\">\r\n                        <div class=\"padding-bt-tp text-right\">\r\n                            <button class=\"btn btn-primary btn-sm btn-design btn-product\" type=\"button\"\r\n                                (click)=\"resetForm(myForm)\">CANCEL</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-6\">\r\n                        <div class=\"padding-bt-tp text-left\">\r\n                            <button type=\"button\" class=\"btn btn-primary btn-sm btn-design btn-product\"\r\n                                style=\"margin-right:20px\"\r\n                                (click)=\"this.currentProductId? updateProduct(myForm) : addProduct(myForm)\">SAVE</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </form>\r\n        </div>\r\n    </nb-card-body>\r\n</nb-card>","export class PriceCategory {\r\n    id:number;\r\n    productId:number;\r\n    categoryId:number;\r\n    price:number;\r\n    category:string;\r\n\r\n    constructor(){\r\n        this.id = null;\r\n        this.price = null;\r\n        this.productId = null;\r\n        this.categoryId = null;\r\n        this.category = null;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-add-product',\r\n  templateUrl: './add-product.component.html',\r\n  styleUrls: ['./add-product.component.scss']\r\n})\r\nexport class AddProductComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export class Product {\r\n    id:Number;\r\n    productCapacity: number;\r\n    productPackageSize: number;\r\n    productQuality: string;\r\n    productType: string;\r\n    quantity:number;\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AddProductRoutingModule } from './add-product-routing.module';\r\nimport { AddProductComponent } from './add-product.component';\r\nimport { AddNewProductComponent } from './add-new-product/add-new-product.component';\r\nimport { SharedModule } from 'app/@theme/shared.module';\r\nimport { AddPriceComponent } from './add-price/add-price.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddProductComponent, AddNewProductComponent, AddPriceComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AddProductRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class AddProductModule { }\r\n"],"sourceRoot":"webpack:///"}